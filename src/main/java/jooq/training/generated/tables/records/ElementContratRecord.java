/**
 * This class is generated by jOOQ
 */
package jooq.training.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElementContratRecord extends org.jooq.impl.UpdatableRecordImpl<jooq.training.generated.tables.records.ElementContratRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.String>, jooq.training.generated.tables.interfaces.IElementContrat {

	private static final long serialVersionUID = 236936056;

	/**
	 * Setter for <code>PUBLIC.ELEMENT_CONTRAT.ID</code>.
	 */
	@Override
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ELEMENT_CONTRAT.ID</code>.
	 */
	@Override
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ELEMENT_CONTRAT.CONDITION</code>.
	 */
	@Override
	public void setCondition(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ELEMENT_CONTRAT.CONDITION</code>.
	 */
	@Override
	public java.lang.String getCondition() {
		return (java.lang.String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.String> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.String> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return jooq.training.generated.tables.ElementContrat.ELEMENT_CONTRAT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return jooq.training.generated.tables.ElementContrat.ELEMENT_CONTRAT.CONDITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getCondition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ElementContratRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ElementContratRecord value2(java.lang.String value) {
		setCondition(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ElementContratRecord values(java.lang.Integer value1, java.lang.String value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(jooq.training.generated.tables.interfaces.IElementContrat from) {
		setId(from.getId());
		setCondition(from.getCondition());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends jooq.training.generated.tables.interfaces.IElementContrat> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ElementContratRecord
	 */
	public ElementContratRecord() {
		super(jooq.training.generated.tables.ElementContrat.ELEMENT_CONTRAT);
	}

	/**
	 * Create a detached, initialised ElementContratRecord
	 */
	public ElementContratRecord(java.lang.Integer id, java.lang.String condition) {
		super(jooq.training.generated.tables.ElementContrat.ELEMENT_CONTRAT);

		setValue(0, id);
		setValue(1, condition);
	}
}
